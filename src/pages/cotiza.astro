---
import { categories } from "../data/categories";
const siteUrl = import.meta.env.PUBLIC_SITE_URL || "http://localhost:4321";
const honeypot = import.meta.env.HONEYPOT_FIELD || "website";
---

<section class="mx-auto max-w-2xl p-6">
  <h1 class="text-3xl font-bold mb-4">Solicitar cotizaci√≥n</h1>

  <form id="quoteForm" class="grid gap-3">
    <input name="name" placeholder="Nombre" required class="border p-2 rounded" />
    <input name="email" type="email" placeholder="Correo" required class="border p-2 rounded" />

    <!-- üîΩ Cambiamos input por select de servicio -->
    <select id="serviceSelect" name="service" required class="border p-2 rounded">
      <option value="">Seleccione tipo de servicio</option>
      {categories.map((c) => (
        <option value={c}>{c}</option>
      ))}
    </select>

    <input name="quantity" placeholder="Cantidad (opcional)" class="border p-2 rounded" />
    <textarea name="message" placeholder="Describe tu necesidad" required class="border p-2 rounded"></textarea>

    <!-- Honeypot -->
    <input type="text" name={honeypot} class="hidden" tabindex="-1" autocomplete="off" />

    <button class="bg-blue-600 text-white px-4 py-2 rounded" type="submit">Enviar</button>
    <p id="status" class="text-sm"></p>
  </form>

  <script>
    // Preseleccionar servicio desde ?service=Casas
    const select = document.getElementById("serviceSelect");
    const params = new URLSearchParams(location.search);
    const serviceFromUrl = params.get("service");
    if (serviceFromUrl) {
      // intenta hacer match exacto; si no, intenta case-insensitive
      const exact = [...select.options].find(o => o.value === serviceFromUrl);
      const ci = exact || [...select.options].find(o => o.value.toLowerCase() === serviceFromUrl.toLowerCase());
      if (ci) select.value = ci.value;
    }

    const form = document.getElementById("quoteForm");
    const status = document.getElementById("status");
    form.addEventListener("submit", async (e) => {
      e.preventDefault();
      status.textContent = "Enviando...";
      const data = Object.fromEntries(new FormData(form));
      try {
        const r = await fetch("/api/cotizacion", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(data),
        });
        const j = await r.json();
        status.textContent = r.ok ? j.message : (j.error || "Error al enviar");
        if (r.ok) form.reset();
      } catch {
        status.textContent = "Error de red";
      }
    });
  </script>
</section>
