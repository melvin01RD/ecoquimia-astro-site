---
import Base from "../layouts/Base.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
export const prerender = true;

import { Grid2x2, Mail, User, AtSign, ListFilter, Hash } from "@lucide/astro";
import { services, getServiceOptions } from "../data/services";

const options = getServiceOptions();
const honeypotName = "website";
---

<Base title="Cotización — Ecoquimia" description="Solicita tu cotización de control de plagas.">
  <Header slot="header" />

  <!-- Hero -->
  <section class="relative overflow-hidden pt-16 md:pt-20">
    <div class="absolute inset-0 -z-10 bg-[radial-gradient(60%_60%_at_50%_0%,rgba(16,185,129,.15),rgba(255,255,255,0))]"></div>
    <div class="container-max py-8 md:py-12 text-center">
      <h1 class="text-3xl md:text-4xl font-bold tracking-tight">Cotiza tu necesidad</h1>
      <p class="mt-2 text-zinc-600 max-w-2xl mx-auto">Elige un tipo de servicio y completa el formulario. Respuesta en horas laborales.</p>
    </div>
  </section>

  <section class="section-pad">
    <div class="container-max grid gap-6 md:gap-8 lg:grid-cols-2">
      <!-- Tipos de servicio (cards) -->
      <div class="surface rounded-app p-5 md:p-6">
        <h2 class="text-base md:text-lg font-semibold mb-4 flex items-center gap-2">
          <Grid2x2 class="w-5 h-5" /> Tipos de servicio
        </h2>

        <div class="grid gap-3 sm:grid-cols-2">
          {services.map((s) => (
            <a
              href={`/cotizacion?service=${s.slug}#quoteForm`}
              data-astro-prefetch
              data-service={s.slug}
              class="tile-light no-underline hover:no-underline flex items-start gap-3"
            >
              <span class="text-xl">{s.emoji}</span>
              <div class="flex-1">
                <div class="font-medium">{s.title}</div>
                <div class="text-xs text-zinc-500 line-clamp-2">{s.description}</div>
              </div>
            </a>
          ))}
        </div>
      </div>

      <!-- Formulario (oculto inicialmente) -->
      <div id="formCard"
           class="surface rounded-app p-5 md:p-6 transition-opacity duration-200 opacity-0 pointer-events-none"
           aria-hidden="true" inert>
        <h2 class="text-base md:text-lg font-semibold mb-4 flex items-center gap-2">
          <Mail class="w-5 h-5" /> Solicitar cotización
        </h2>

        <form id="quoteForm" name="quoteForm" class="stack-sm max-w-xl"
              method="post" action="/api/cotizacion" aria-labelledby="form-legend" novalidate>
          <fieldset class="grid gap-4">
            <legend id="form-legend" class="sr-only">Formulario de cotización</legend>

            <!-- Honeypot -->
            <div class="hidden" aria-hidden="true">
              <label for="hp-field">No llenar</label>
              <input id="hp-field" name={honeypotName} type="text" tabindex="-1" autocomplete="organization" />
            </div>

            <div class="field">
              <label class="label" for="name">Nombre</label>
              <div class="relative">
                <User class="absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-zinc-400 pointer-events-none" />
                <input id="name" name="name" type="text" autocomplete="name" required placeholder="Tu nombre" class="input pl-9" />
              </div>
            </div>

            <div class="field">
              <label class="label" for="email">Correo</label>
              <div class="relative">
                <AtSign class="absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-zinc-400 pointer-events-none" />
                <input id="email" name="email" type="email" autocomplete="email" required placeholder="tucorreo@dominio.com" class="input pl-9" />
              </div>
            </div>

            <div class="field">
              <label class="label" for="serviceSelect">Tipo de servicio</label>
              <div class="relative">
                <ListFilter class="absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-zinc-400 pointer-events-none" />
                <select id="serviceSelect" name="service" required class="select pl-9">
                  <option value="">Seleccione tipo de servicio</option>
                  {options.map(o => <option value={o.value}>{o.label}</option>)}
                </select>
              </div>
              <p class="help">También puedes elegir desde las tarjetas de la izquierda.</p>
            </div>

            <div class="field">
              <label class="label" for="quantity">Cantidad (opcional)</label>
              <div class="relative">
                <Hash class="absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-zinc-400 pointer-events-none" />
                <input id="quantity" name="quantity" type="number" inputmode="numeric" min="1" step="1" placeholder="Ej: 2" class="input pl-9" />
              </div>
            </div>

            <div class="field">
              <label class="label" for="message">Describe tu necesidad</label>
              <textarea id="message" name="message" rows={5} required placeholder="Cuéntanos detalles del servicio que necesitas" class="textarea"></textarea>
            </div>

            <div class="flex items-center gap-3">
              <button id="submitBtn" type="submit" class="btn btn-primary btn-block">Enviar</button>
              <p id="status" class="text-sm" aria-live="polite"></p>
            </div>
          </fieldset>
        </form>
      </div>
    </div>
  </section>

  <Footer slot="footer" />

  <!-- Lógica UI -->
  <script is:inline>
    const qs = (s, r=document) => r.querySelector(s);
    const qsa = (s, r=document) => Array.from(r.querySelectorAll(s));

    const formCard = qs("#formCard");
    const form = qs("#quoteForm");
    const select = qs("#serviceSelect");
    const status = qs("#status");
    const btn = qs("#submitBtn");

    function showForm() {
      if (!formCard) return;
      formCard.classList.remove("opacity-0","pointer-events-none");
      formCard.removeAttribute("aria-hidden");
      formCard.removeAttribute("inert");
      qs("#name")?.focus({ preventScroll: true });
    }

    function preselectFromURL() {
      const params = new URLSearchParams(window.location.search);
      const s = params.get("service");
      if (s && select) {
        const match = Array.from(select.options).find(o => o.value === s);
        if (match) {
          select.value = s;
          showForm();
          document.getElementById("quoteForm")?.scrollIntoView({ behavior:"smooth", block:"start" });
        }
      }
    }

    // Click en tarjetas
    qsa('a[data-service]').forEach(a => {
      a.addEventListener('click', (e) => {
        if (location.pathname.endsWith('/cotizacion')) {
          e.preventDefault();
          const s = a.getAttribute('data-service');
          if (select && s) {
            select.value = s;
            showForm();
            history.replaceState(null, '', `/cotizacion?service=${encodeURIComponent(s)}#quoteForm`);
            document.getElementById('quoteForm')?.scrollIntoView({ behavior: 'smooth', block: 'start' });
          }
        }
      });
    });

    // Cambio manual en el select
    select?.addEventListener('change', () => { if (select.value) showForm(); });

    requestAnimationFrame(preselectFromURL);

    // Submit con fetch
    form?.addEventListener("submit", async (e) => {
      e.preventDefault();
      if (!status || !btn) return;

      btn.setAttribute("aria-busy","true");
      status.textContent = "Enviando...";
      status.className = "text-sm text-zinc-600";

      const payload = Object.fromEntries(new FormData(form));

      try {
        const res = await fetch("/api/cotizacion", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(payload),
        });

        let data = {};
        try { data = await res.json(); } catch {}

        if (res.ok) {
          const params = new URLSearchParams();
          if (payload.name) params.set("name", String(payload.name));
          if (payload.service) params.set("service", String(payload.service));
          const url = (data && data.redirectTo) || `/gracias?${params.toString()}`;
          window.location.href = url; return;
        }

        status.textContent = (data && data.error) || "Error al enviar";
        status.className = "text-sm text-red-600";
      } catch {
        status.textContent = "Error de red";
        status.className = "text-sm text-red-600";
      } finally {
        btn.removeAttribute("aria-busy");
      }
    });
  </script>
</Base>
