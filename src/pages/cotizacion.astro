---
import Base from "../layouts/Base.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
export const prerender = true;

import { Grid2x2, Mail, User, AtSign, ListFilter, Hash } from "@lucide/astro";

import categoriesDefault, { categories as categoriesNamed } from "../data/categories";

const CATEGORIES: readonly string[] = categoriesNamed ?? categoriesDefault ?? [];

const url = new URL(Astro.request.url);
const requestedService = url.searchParams.get("service")?.trim().toLowerCase();

const normalize = (value?: string | null) => value?.trim().toLowerCase() ?? "";
const selectedService = requestedService
  ? CATEGORIES.find((entry) => normalize(entry) === requestedService) ?? ""
  : "";
const hasSelectedService = selectedService.length > 0;

type IconShape = { viewBox: string; paths: readonly string[] };
const ICON_SHAPES: Record<string, IconShape> = {
  building: {
    viewBox: "0 0 24 24",
    paths: [
      "M3 21V3h18v18H3Z",
      "M7 7h2v2H7V7Zm4 0h2v2h-2V7Zm4 0h2v2h-2V7Zm-8 4h2v2H7v-2Zm4 0h2v2h-2v-2Zm4 0h2v2h-2v-2Zm-6 4h6v4H9v-4Z",
    ],
  },
  house: {
    viewBox: "0 0 24 24",
    paths: [
      "M4 11.2 12 4l8 7.2V20a1 1 0 0 1-1 1h-5v-5h-4v5H5a1 1 0 0 1-1-1v-8.8Z",
    ],
  },
  bed: {
    viewBox: "0 0 24 24",
    paths: [
      "M3 6h18v12h-2v-4H5v4H3V6Zm4 6h10V8H7v4Zm1-1V9h2v2H8Zm6-2h2v2h-2V9Z",
    ],
  },
  utensils: {
    viewBox: "0 0 24 24",
    paths: [
      "M5 3h2v7h1V3h2v7c0 2.2-1.4 3.7-3 4v7H5V14c-1.6-.3-3-1.8-3-4V3h3Zm11 0h3v7h2v2h-2v9h-2v-9h-2V3Z",
    ],
  },
  car: {
    viewBox: "0 0 24 24",
    paths: [
      "M4.5 6h15l2 6v6.5H20a2.5 2.5 0 0 1-5 0H9a2.5 2.5 0 0 1-5 0H2.5V12L4.5 6Zm.8 7a1.7 1.7 0 1 0 0 3.4 1.7 1.7 0 0 0 0-3.4Zm13.4 0a1.7 1.7 0 1 0 0 3.4 1.7 1.7 0 0 0 0-3.4ZM6.2 8l-.9 3h13.4l-.9-3H6.2Z",
    ],
  },
  landmark: {
    viewBox: "0 0 24 24",
    paths: [
      "M4 10 12 3l8 7v2h-1v8h-2v-8h-2v8h-2v-8h-2v8H9v-8H7v8H5v-8H4v-2Z",
    ],
  },
  factory: {
    viewBox: "0 0 24 24",
    paths: [
      "M3 21V9l5 3V9l6 3V8l7 4v9h-3v-4h-3v4H9v-4H6v4H3Z",
      "M6 11h2v2H6v-2Zm7 1h2v2h-2v-2Z",
    ],
  },
  school: {
    viewBox: "0 0 24 24",
    paths: [
      "M3 10 12 4l9 6v2h-2v8h-6v-4h-2v4H5v-8H3v-2Zm8 2h2v2h-2v-2Zm-4 0h2v2H7v-2Zm8 0h2v2h-2v-2Z",
    ],
  },
  bag: {
    viewBox: "0 0 24 24",
    paths: [
      "M7 7V5a5 5 0 0 1 10 0v2h3v14H4V7h3Zm2 0h6V5a3 3 0 0 0-6 0v2Zm-3 4h2v2H6v-2Zm12 0h-2v2h2v-2ZM9 17h6v2H9v-2Z",
    ],
  },
  tools: {
    viewBox: "0 0 24 24",
    paths: [
      "M16.6 2.6a5 5 0 0 1 5.7 6.6l-3-3-3.2 3.1 3 3A5 5 0 0 1 13.5 9L5 17.6V22H3v-5.4l9-9A5 5 0 0 1 16.6 2.6Z",
    ],
  },
};

const categoryIcon: Record<string, IconShape> = {
  "Apartamentos": ICON_SHAPES.building,
  "Casas": ICON_SHAPES.house,
  "Hoteles": ICON_SHAPES.bed,
  "Oficinas": ICON_SHAPES.building,
  "Restaurantes": ICON_SHAPES.utensils,
  "Vehículos": ICON_SHAPES.car,
  "Área Común": ICON_SHAPES.landmark,
  "Industria Farmacéutica": ICON_SHAPES.factory,
  "Colegios": ICON_SHAPES.school,
  "Plazas Comerciales": ICON_SHAPES.bag,
  "Edificios Empresariales": ICON_SHAPES.building,
  "Cimientos de Construcción": ICON_SHAPES.tools,
};

const honeypotName = "website";
---

<Base title="Cotización — Ecoquimia" description="Solicita tu cotización de control de plagas. Respuesta rápida.">
  <Header slot="header" />

  <!-- Hero compacto -->
  <section class="relative overflow-hidden pt-16 md:pt-20">
    <div class="absolute inset-0 -z-10 bg-[radial-gradient(60%_60%_at_50%_0%,rgba(16,185,129,.15),rgba(255,255,255,0))]"></div>
    <div class="container-max py-8 md:py-12 text-center">
      <h1 class="text-3xl md:text-4xl font-bold tracking-tight">Cotiza tu necesidad</h1>
      <p class="mt-2 text-zinc-600 max-w-2xl mx-auto">Selecciona una categoría para habilitar el formulario. Respuesta en horas laborales.</p>
    </div>
  </section>

  <!-- Contenido principal -->
  <section class="section-pad">
    <div class="container-max grid gap-6 md:gap-8 lg:grid-cols-2">
      <!-- Categorías -->
      <div class="surface rounded-app p-5 md:p-6">
        <h2 class="text-base md:text-lg font-semibold mb-4 flex items-center gap-2">
          <Grid2x2 class="w-5 h-5" /> Categorías
        </h2>

        {CATEGORIES.length === 0 ? (
          <div class="text-sm text-red-600">
            No hay categorías configuradas. Revisa <code>src/data/categories.*</code>.
          </div>
        ) : (
          <div class="auto-grid-sm md:auto-grid">
            {CATEGORIES.map((category) => {
              const normalized = normalize(category);
              const icon = categoryIcon[category] ?? ICON_SHAPES.building;
              const isActive = normalize(selectedService) === normalized;
              const query = encodeURIComponent(category);
              const href = `/cotizacion?service=${query}#quoteForm`;
              const baseClass =
                "tile-light flex items-center gap-3 no-underline hover:no-underline transition-all";
              const classes = `${baseClass}${isActive ? " ring-2 ring-emerald-500/70 shadow-sm" : ""}`;

              return (
                <a
                  href={href}
                  data-astro-prefetch
                  class={classes}
                  aria-current={isActive ? "true" : undefined}
                >
                  <svg
                    class="w-6 h-6 md:w-7 md:h-7 text-brand"
                    viewBox={icon.viewBox}
                    role="presentation"
                    aria-hidden="true"
                  >
                    {icon.paths.map((d) => (
                      <path d={d} fill="currentColor"></path>
                    ))}
                  </svg>
                  <span class="text-sm md:text-base font-medium">{category}</span>
                </a>
              );
            })}
          </div>
        )}
      </div>

      <!-- Formulario -->
      <div id="quoteForm" class="surface rounded-app p-5 md:p-6">
        <h2 class="text-base md:text-lg font-semibold mb-4 flex items-center gap-2">
          <Mail class="w-5 h-5" /> Solicitar cotización
        </h2>

        {hasSelectedService ? (
          <form
            name="quoteForm"
            class="stack-sm max-w-xl"
            method="post"
            action="/api/cotizacion"
            aria-labelledby="form-legend"
          >
            <fieldset class="grid gap-4">
              <legend id="form-legend" class="sr-only">Formulario de cotización</legend>

              <!-- Honeypot -->
              <div class="hidden" aria-hidden="true">
                <label for="hp-field">No llenar</label>
                <input id="hp-field" name={honeypotName} type="text" tabindex="-1" autocomplete="organization" />
              </div>

              <div class="field">
                <label class="label" for="name">Nombre</label>
                <div class="relative">
                  <User class="absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-zinc-400 pointer-events-none" />
                  <input id="name" name="name" type="text" autocomplete="name" required placeholder="Tu nombre" class="input pl-9" />
                </div>
              </div>

              <div class="field">
                <label class="label" for="email">Correo</label>
                <div class="relative">
                  <AtSign class="absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-zinc-400 pointer-events-none" />
                  <input id="email" name="email" type="email" autocomplete="email" required placeholder="tucorreo@dominio.com" class="input pl-9" />
                </div>
              </div>

              <div class="field">
                <label class="label" for="serviceSelect">Tipo de servicio</label>
                <div class="relative">
                  <ListFilter class="absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-zinc-400 pointer-events-none" />
                  <select id="serviceSelect" name="service" required class="select pl-9">
                    <option value="">Seleccione tipo de servicio</option>
                    {CATEGORIES.map((category) => (
                      <option
                        value={category}
                        selected={normalize(category) === normalize(selectedService)}
                      >
                        {category}
                      </option>
                    ))}
                  </select>
                </div>
                <p class="help">También puedes elegir desde las tarjetas de la izquierda.</p>
              </div>

              <div class="field">
                <label class="label" for="quantity">Cantidad (opcional)</label>
                <div class="relative">
                  <Hash class="absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-zinc-400 pointer-events-none" />
                  <input id="quantity" name="quantity" type="number" inputmode="numeric" min="1" step="1" placeholder="Ej: 2" class="input pl-9" />
                </div>
              </div>

              <div class="field">
                <label class="label" for="message">Describe tu necesidad</label>
                <textarea id="message" name="message" rows={5} required placeholder="Cuéntanos detalles del servicio que necesitas" class="textarea"></textarea>
              </div>

              <button type="submit" class="btn btn-primary btn-block">Enviar</button>
            </fieldset>
          </form>
        ) : (
          <div class="text-sm text-zinc-600 max-w-xl">
            Selecciona una categoría en las tarjetas de la izquierda para habilitar el formulario de cotización.
          </div>
        )}
      </div>
    </div>
  </section>

  <Footer slot="footer" />
</Base>
