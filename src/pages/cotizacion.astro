---
import Base from "../layouts/Base.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";

// ✅ SSR (mejor para /api y control de caché)
export const prerender = false;

import { Grid2x2, Mail, User, AtSign, ListFilter, Hash } from "@lucide/astro";
import { services, getServiceOptions } from "../data/services";

const options = getServiceOptions();
const honeypotName = "website";

// ✅ Lee el query param para error ligero (e=c => captcha_required)
const url = new URL(Astro.request.url);
const e = url.searchParams.get("e");
const errorMsg = e === "c" ? "Por favor completa el CAPTCHA." : null;
---

<Base title="Cotización — Ecoquimia" description="Solicita tu cotización de control de plagas.">
  <Header slot="header" />

  <!-- Hero -->
  <section class="relative overflow-hidden pt-16 md:pt-20">
    <div class="absolute inset-0 -z-10 bg-[radial-gradient(60%_60%_at_50%_0%,rgba(16,185,129,.15),rgba(255,255,255,0))]"></div>
    <div class="container-max py-8 md:py-12 text-center">
      <h1 class="text-3xl md:text-4xl font-bold tracking-tight">Cotiza tu necesidad</h1>
      <p class="mt-2 text-zinc-600 max-w-2xl mx-auto">Elige un tipo de servicio y completa el formulario. Respuesta en horas laborales.</p>
    </div>
  </section>

  <section class="section-pad">
    <div class="container-max grid gap-6 md:gap-8 md:grid-cols-[1fr_420px] lg:grid-cols-[1fr_480px]">

      <!-- Tipos de servicio -->
      <div class="surface rounded-app p-5 md:p-6 min-h-[60vh]">
        <h2 class="text-base md:text-lg font-semibold mb-4 flex items-center gap-2">
          <Grid2x2 class="w-5 h-5" /> Tipos de servicio
        </h2>

        <div class="grid gap-3 sm:grid-cols-2">
          {services.map((s) => (
            <a
              href={`/cotizacion?service=${s.slug}#quoteForm`}
              data-astro-prefetch
              data-service={s.slug}
              class="tile-light no-underline hover:no-underline flex items-start gap-3"
            >
              <span class="text-xl">{s.emoji}</span>
              <div class="flex-1">
                <div class="font-medium">{s.title}</div>
                <div class="text-xs text-zinc-500 line-clamp-2">{s.description}</div>
              </div>
            </a>
          ))}
        </div>
      </div>

      <!-- Formulario -->
      <aside class="self-start md:sticky md:top-24">
        <div id="formCard" class="surface rounded-app p-5 md:p-6">
          <h2 class="text-base md:text-lg font-semibold mb-4 flex items-center gap-2">
            <Mail class="w-5 h-5" /> Solicitar cotización
          </h2>

          <!-- ✅ Aviso de error ligero, SSR, sin JS -->
          {errorMsg && (
            <p role="alert" class="mb-4 rounded-lg border border-red-300 bg-red-50 px-4 py-3 text-red-800">
              {errorMsg}
            </p>
          )}

          
          <form id="quoteForm" name="quoteForm" class="stack-sm max-w-xl"
                method="post" action="/api/cotizacion" aria-labelledby="form-legend">
            <fieldset class="grid gap-4">
              <legend id="form-legend" class="sr-only">Formulario de cotización</legend>

              <!-- Honeypot -->
              <div class="hidden" aria-hidden="true">
                <label for="hp-field">No llenar</label>
                <input id="hp-field" name={honeypotName} type="text" tabindex="-1" autocomplete="organization" />
              </div>

              <div class="field">
                <label class="label" for="name">Nombre</label>
                <div class="relative">
                  <User class="absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-zinc-400 pointer-events-none" />
                  <input id="name" name="name" type="text" autocomplete="name" required placeholder="Tu nombre" class="input pl-9" />
                </div>
              </div>

              <div class="field">
                <label class="label" for="email">Correo</label>
                <div class="relative">
                  <AtSign class="absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-zinc-400 pointer-events-none" />
                  <input id="email" name="email" type="email" autocomplete="email" required placeholder="tucorreo@dominio.com" class="input pl-9" />
                </div>
              </div>

              <div class="field">
                <label class="label" for="serviceSelect">Tipo de servicio</label>
                <div class="relative">
                  <ListFilter class="absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-zinc-400 pointer-events-none" />
                  <select id="serviceSelect" name="service" required class="select pl-9">
                    <option value="">Seleccione tipo de servicio</option>
                    {options.map(o => <option value={o.value}>{o.label}</option>)}
                  </select>
                </div>
                <p class="help">También puedes elegir desde las tarjetas de la izquierda.</p>
              </div>

              <div class="field">
                <label class="label" for="quantity">Cantidad (opcional)</label>
                <div class="relative">
                  <Hash class="absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-zinc-400 pointer-events-none" />
                  <input id="quantity" name="quantity" type="number" inputmode="numeric" min="1" step="1" placeholder="Ej: 2" class="input pl-9" />
                </div>
              </div>


                            <!-- Mensaje -->
              <div class="field">
                <label class="label" for="message">Describe tu necesidad</label>
                <textarea
                  id="message"
                  name="message"
                  rows={5}
                  required
                  placeholder="Cuéntanos detalles del servicio que necesitas"
                  class="textarea"
                ></textarea>
                <p class="help">Mientras más detalles, mejor te cotizamos.</p>
              </div>


              <div class="field" id="captcha">
                <label class="label" for="captchaInput">Código de verificación</label>
                <div class="flex items-center gap-3">
                  <!-- ⚠️ No interpolar {Date.now()} en atributo estático.
                       Lo recargamos por JS cuando el usuario pida refrescar. -->
                  <img id="captchaImage" src="/api/captcha" alt="Captcha" class="h-10 w-[120px] rounded border" loading="lazy" decoding="async" />
                  <button type="button" id="refreshCaptcha" class="btn btn-secondary">Actualizar</button>
                </div>
                <input id="captchaInput" name="captcha" type="text" inputmode="numeric" pattern="[0-9]{6}" maxlength="6" required
                      placeholder="Escribe los 6 números" class="input" />
                <p class="help">Escribe los 6 dígitos tal como aparecen.</p>
              </div>

              <div class="flex items-center gap-3">
                <button id="submitBtn" type="submit" class="btn btn-primary btn-block">Enviar</button>
                <p id="status" class="text-sm" aria-live="polite"></p>
              </div>
            </fieldset>
          </form>
        </div>
      </aside>
    </div>
  </section>

  <Footer slot="footer" />

  <!-- Lógica UI mínima: sin fetch para mantener PE y reducir JS -->
  <script is:inline>
    const qs = (s, r=document) => r.querySelector(s);
    const qsa = (s, r=document) => Array.from(r.querySelectorAll(s));

    const select = qs("#serviceSelect");

    // Preselección desde URL (mejora UX, sin recarga)
    function preselectFromURL() {
      const params = new URLSearchParams(window.location.search);
      const s = params.get("service");
      if (s && select) {
        const match = Array.from(select.options).find(o => o.value === s);
        if (match) {
          select.value = s;
          document.getElementById("quoteForm")?.scrollIntoView({ behavior:"smooth", block:"start" });
          qs("#name")?.focus({ preventScroll: true });
        }
      }
    }
    requestAnimationFrame(preselectFromURL);

    // Click en tarjetas: preseleccionar + scroll sin recargar
    qsa('a[data-service]').forEach(a => {
      a.addEventListener('click', (e) => {
        if (location.pathname.endsWith('/cotizacion')) {
          e.preventDefault();
          const s = a.getAttribute('data-service');
          if (select && s) {
            select.value = s;
            history.replaceState(null, '', `/cotizacion?service=${encodeURIComponent(s)}#quoteForm`);
            document.getElementById('quoteForm')?.scrollIntoView({ behavior: 'smooth', block: 'start' });
            qs("#name")?.focus({ preventScroll: true });
          }
        }
      });
    });

    // Refresh CAPTCHA (evitar cache con timestamp)
    const img = qs("#captchaImage");
    const btnRefresh = qs("#refreshCaptcha");
    btnRefresh?.addEventListener("click", () => {
      if (!img) return;
      const u = new URL('/api/captcha', window.location.origin);
      u.searchParams.set('t', String(Date.now()));
      img.src = u.toString();
    });
  </script>
</Base>
